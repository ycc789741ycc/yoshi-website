"use strict";(self.webpackChunkyoshi_website=self.webpackChunkyoshi_website||[]).push([[4359],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return b}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),b=i,h=d["".concat(u,".").concat(b)]||d[b]||p[b]||o;return n?r.createElement(h,a(a({ref:t},c),{},{components:n})):r.createElement(h,a({ref:t},c))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3097:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],s={sidebar_position:1},u="Quick Start",l={unversionedId:"build_website/quick_start",id:"build_website/quick_start",title:"Quick Start",description:"Quick to start up the website with the simple instructions.",source:"@site/docs/build_website/quick_start.md",sourceDirName:"build_website",slug:"/build_website/quick_start",permalink:"/yoshi-website/docs/build_website/quick_start",editUrl:"https://github.com/ycc789741ycc/docs/build_website/quick_start.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduce",permalink:"/yoshi-website/docs/intro"},next:{title:"Port Forwarding",permalink:"/yoshi-website/docs/WSL2/port_forwarding"}},c={},p=[{value:"Install yarn",id:"install-yarn",level:2},{value:"Create docusaurus",id:"create-docusaurus",level:2},{value:"Modify the website&#39;s config",id:"modify-the-websites-config",level:2},{value:"Create github repo",id:"create-github-repo",level:2},{value:"Deploy on github page",id:"deploy-on-github-page",level:2},{value:"Add CI/CD pipeline",id:"add-cicd-pipeline",level:2}],d={toc:p};function b(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quick-start"},"Quick Start"),(0,o.kt)("p",null,"Quick to start up the website with the simple instructions."),(0,o.kt)("h2",{id:"install-yarn"},"Install yarn"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --global yarn\n")),(0,o.kt)("h2",{id:"create-docusaurus"},"Create docusaurus"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn create docusaurus\n")),(0,o.kt)("p",null,"After doing the instruction, you can enter in the directory's name."),(0,o.kt)("h2",{id:"modify-the-websites-config"},"Modify the website's config"),(0,o.kt)("p",null,"Inorder to put the website to githubpage, we need to make a little change."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=your_directory/docusaurus.config.js",title:"your_directory/docusaurus.config.js"},"const config = {\n  ...\n  url: 'https://github user name.github.io',\n  baseUrl: '/github repo name/',\n  organizationName: 'github user name', // Usually your GitHub org/user name.\n  projectName: 'github repo name',\n  ...\n}\n")),(0,o.kt)("h2",{id:"create-github-repo"},"Create github repo"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create a new github remote empty repo.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd your_directory\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create a new local repo.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'git init\ngit add .\ngit commit -m "Create docusaurus."\ngit push -u origin master\n')),(0,o.kt)("p",null,"Then you have you website on the github, but still not on github page right now."),(0,o.kt)("h2",{id:"deploy-on-github-page"},"Deploy on github page"),(0,o.kt)("p",null,"Make sure your github has your ssh public key on the local machine currently used."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"USE_SSH=true yarn deploy\n")),(0,o.kt)("p",null,"After then, your website will be deploy on ",(0,o.kt)("inlineCode",{parentName:"p"},"https://github_user.github.io/github_repo/")),(0,o.kt)("h2",{id:"add-cicd-pipeline"},"Add CI/CD pipeline"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".github/workflows/deploy.yml"',title:'".github/workflows/deploy.yml"'},"name: Deploy to GitHub Pages\n\n  on:\n    push:\n      branches:\n        - master\n      # Review gh actions docs if you want to further define triggers, paths, etc\n      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\n\n  jobs:\n    deploy:\n      name: Deploy to GitHub Pages\n      runs-on: ubuntu-latest\n      steps:\n        - uses: actions/checkout@v2\n        - uses: actions/setup-node@v3\n          with:\n            node-version: 16.x\n            cache: yarn\n\n        - name: Install dependencies\n          run: yarn install --frozen-lockfile\n        - name: Build website\n          run: yarn build\n\n        # Popular action to deploy to GitHub Pages:\n        # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus\n        - name: Deploy to GitHub Pages\n          uses: peaceiris/actions-gh-pages@v3\n          with:\n            github_token: ${{ secrets.GITHUB_TOKEN }}\n            # Build output to publish to the `gh-pages` branch:\n            publish_dir: ./build\n            # The following lines assign commit authorship to the official\n            # GH-Actions bot for deploys to `gh-pages` branch:\n            # https://github.com/actions/checkout/issues/13#issuecomment-724415212\n            # The GH actions bot is used by default if you didn't specify the two fields.\n            # You can swap them out with your own user credentials.\n            user_name: github-actions[bot]\n            user_email: 41898282+github-actions[bot]@users.noreply.github.com\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=.github/workflows/test-deploy.yml",title:".github/workflows/test-deploy.yml"},"name: Test deployment\n\non:\n  pull_request:\n    branches:\n      - main\n    # Review gh actions docs if you want to further define triggers, paths, etc\n    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\n\njobs:\n  test-deploy:\n    name: Test deployment\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 16.x\n          cache: yarn\n\n      - name: Install dependencies\n        run: yarn install --frozen-lockfile\n      - name: Test build website\n        run: yarn build\n")))}b.isMDXComponent=!0}}]);